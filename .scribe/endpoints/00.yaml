name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/todos
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all todos'
      description: 'This endpoint retrieves a list of todos, filtered by status, sorted, and searchable by title or details.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      status:
        name: status
        description: 'Filter by status (completed, in progress, not started).'
        required: false
        example: completed
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      search:
        name: search
        description: 'Search by title or details.'
        required: false
        example: meeting
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      sort:
        name: sort
        description: 'Sort by field (e.g., title:asc, status:desc).'
        required: false
        example: 'title:asc'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanQueryParameters:
      status: completed
      search: meeting
      sort: 'title:asc'
    bodyParameters:
      sort_by:
        name: sort_by
        description: ''
        required: false
        example: status
        type: string
        enumValues:
          - title
          - status
          - created_at
        exampleWasSpecified: false
        nullable: false
        custom: []
      sort_direction:
        name: sort_direction
        description: ''
        required: false
        example: asc
        type: string
        enumValues:
          - asc
          - desc
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      sort_by: status
      sort_direction: asc
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "data": [
               {
                   "id": 1,
                   "title": "Sample Todo",
                   "details": "This is a sample todo",
                   "status": "in progress",
                   "created_at": "2024-12-13T12:34:56Z",
                   "updated_at": "2024-12-13T12:34:56Z"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/todos
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new todo'
      description: 'This endpoint creates a new todo item.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The title of the todo.'
        required: true
        example: '"Write report"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'The details of the todo.'
        required: false
        example: '"Complete the report for Monday''s meeting"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The status of the todo (completed, in progress, not started).'
        required: false
        example: '"not started"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Write report"'
      details: '"Complete the report for Monday''s meeting"'
      status: '"not started"'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "id": 1,
           "title": "Write report",
           "details": "Complete the report for Monday's meeting",
           "status": "not started",
           "created_at": "2024-12-13T12:34:56Z",
           "updated_at": "2024-12-13T12:34:56Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/todos/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a todo'
      description: 'This endpoint updates the details of an existing todo item.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo to update.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'The new title of the todo.'
        required: false
        example: '"Updated report"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      details:
        name: details
        description: 'The new details of the todo.'
        required: false
        example: '"Update the report for Tuesday''s meeting"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      status:
        name: status
        description: 'The new status of the todo (completed, in progress, not started).'
        required: false
        example: '"completed"'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      title: '"Updated report"'
      details: '"Update the report for Tuesday''s meeting"'
      status: '"completed"'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "id": 1,
           "title": "Updated report",
           "details": "Update the report for Tuesday's meeting",
           "status": "completed",
           "created_at": "2024-12-13T12:34:56Z",
           "updated_at": "2024-12-13T12:45:00Z"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/todos/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a todo'
      description: 'This endpoint deletes a todo by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo to delete.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: |-
          {
           "message": "Todo deleted successfully"
          }
          * @response 404 {
           "status": "error",
           "message": "Todo not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/todos/deleted
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get deleted todos'
      description: 'This endpoint retrieves all todos that have been soft-deleted.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "data": [
               {
                   "id": 1,
                   "title": "Deleted Todo",
                   "details": "This todo has been deleted",
                   "status": "not started",
                   "created_at": "2024-12-01T12:00:00Z",
                   "updated_at": "2024-12-01T12:00:00Z",
                   "deleted_at": "2024-12-12T12:00:00Z"
               }
           ]
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "Todo not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/todos/restore/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Restore a deleted todo'
      description: 'This endpoint restores a soft-deleted todo by its ID.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo to restore.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "message": "Todo restored successfully!"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "Todo not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/todos/delete-perm/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Permanently delete a todo'
      description: |-
        This endpoint permanently deletes a soft-deleted todo by its ID.
        It ensures that the todo is already soft-deleted before attempting permanent deletion.
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the todo to delete permanently.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "status": "success",
           "message": "Todo permanently deleted"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: |-
          {
           "status": "error",
           "message": "Todo is not deleted"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: |-
          {
           "status": "error",
           "message": "Todo not found"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
